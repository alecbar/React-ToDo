{"version":3,"sources":["TaskInput.js","TaskRow.js","TaskTable.js","App.js","index.js"],"names":["TaskInput","props","handleChange","bind","handleSubmit","state","value","e","this","setState","target","preventDefault","trim","alert","onNewTask","onSubmit","htmlFor","name","id","type","placeholder","onChange","className","Component","TaskRow","handleClick","handleClear","index","complete","onClear","console","log","onClick","TaskTable","handleClearTask","status","onTaskChange","onTaskRemove","tasks","taskRows","map","task","key","length","createTaskTable","App","sample_tasks","handleNewTask","handleTaskStatusChange","handleClearTasks","filter","i","window","confirm","currentTasks","completedTasks","localStorage","getItem","JSON","parse","setItem","stringify","removeButton","ReactDOM","render","document","getElementById"],"mappings":"iPAgDeA,E,kDA5CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,MAAQ,CAACC,MAAO,IAJN,E,yDAONC,GAETC,KAAKC,SAAS,CAACH,MAAOC,EAAEG,OAAOJ,U,mCAItBC,GAETA,EAAEI,iBAC6B,KAA5BH,KAAKH,MAAMC,MAAMM,OAChBC,MAAM,yBAGNL,KAAKP,MAAMa,UAAUN,KAAKH,MAAMC,OAChCE,KAAKC,SAAS,CAACH,MAAO,Q,+BAK1B,OACI,0BAAMS,SAAUP,KAAKJ,cACjB,2BAAOY,QAAQ,QAAf,cACA,2BACIC,KAAK,OACLC,GAAG,OACHC,KAAK,OACLC,YAAY,eACZd,MAAOE,KAAKH,MAAMC,MAClBe,SAAUb,KAAKN,eAEnB,2BAAOoB,UAAU,gBAAgBH,KAAK,SAASb,MAAM,kB,GAvC7CiB,aCgCTC,E,kDA/BX,WAAYvB,GAAO,IAAD,8BACd,cAAMA,IACDwB,YAAc,EAAKA,YAAYtB,KAAjB,gBACnB,EAAKuB,YAAc,EAAKA,YAAYvB,KAAjB,gBAHL,E,wDAMNI,GACRC,KAAKP,MAAMoB,SAASb,KAAKP,MAAM0B,OAAQnB,KAAKP,MAAM2B,Y,oCAIlDpB,KAAKP,MAAM4B,QAAQrB,KAAKP,MAAM0B,S,+BAK9B,OADAG,QAAQC,IAAI,sBAER,4BACI,4BAAKvB,KAAKP,MAAMgB,MAChB,wBAAIK,UAAU,YACV,4BAAQA,WAAoC,IAAxBd,KAAKP,MAAM2B,SAAoB,gBAAkB,8BAA+BI,QAASxB,KAAKiB,aAAlH,WAEJ,wBAAIH,UAAU,YACV,4BAAQA,UAAU,8BAA8BU,QAASxB,KAAKkB,aAA9D,gB,GAxBEH,aC0EPU,E,kDAvEX,WAAYhC,GAAO,IAAD,8BACd,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAK+B,gBAAkB,EAAKA,gBAAgB/B,KAArB,gBAHT,E,yDAMLwB,EAAOQ,GAChB3B,KAAKP,MAAMmC,aAAaT,EAAOQ,K,sCAGnBR,GACZnB,KAAKP,MAAMoC,aAAaV,K,sCAGZW,GAAQ,IAAD,OACbC,EAAWD,EAAME,KAAI,SAACC,EAAMd,GAAP,OACvB,kBAAC,EAAD,CAASe,IAAKf,EAAOA,MAAOA,EAAOV,KAAMwB,EAAKxB,KAAMW,SAAUa,EAAKb,SAAUP,SAAU,EAAKnB,aAAc2B,QAAS,EAAKK,qBAG5H,OAEI,+BACI,+BACI,4BACI,6BACA,6BACA,+BAGR,+BACKK,M,+BAmCb,OA5BAT,QAAQC,IAAI,UAAWvB,KAAKP,MAAMqC,OAGF,IAA5B9B,KAAKP,MAAMqC,MAAMK,OACTnC,KAAKoC,gBAAgBpC,KAAKP,MAAMqC,OAIpC,+BACI,+BACI,4BACI,6BACA,6BACA,+BAGR,+BACI,4BACI,6CACA,6BACA,oC,GA3DJf,aCsFTsB,E,kDApFb,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IASR6C,aAAe,CACbR,MAAO,CACL,CACErB,KAAM,iBACNW,UAAU,GAEZ,CACEX,KAAM,iBACNW,UAAU,KAhBd,EAAKmB,cAAgB,EAAKA,cAAc5C,KAAnB,gBACrB,EAAK6C,uBAAyB,EAAKA,uBAAuB7C,KAA5B,gBAC9B,EAAK+B,gBAAkB,EAAKA,gBAAgB/B,KAArB,gBACvB,EAAK8C,iBAAmB,EAAKA,iBAAiB9C,KAAtB,gBACxB,EAAKE,MAAQ,CAACiC,MAAO,IANJ,E,0DAuBLG,GACZjC,KAAKC,SAAS,CAAC6B,MAAM,CAAE,CAACrB,KAAMwB,EAAMb,UAAU,IAA1B,mBAAqCpB,KAAKH,MAAMiC,Y,sCAGtDX,GACd,IAAMW,EAAQ9B,KAAKH,MAAMiC,MAAMY,QAAO,SAACT,EAAMU,GAAP,OAAaA,IAAMxB,KACzDnB,KAAKC,SAAS,CAAC6B,MAAOA,M,yCAInBc,OAAOC,QAAQ,+CAChB7C,KAAKC,SAAS,CAAC6B,MAAO,O,6CAIHX,EAAOQ,GAGhB3B,KAAKH,MAAMiC,MACjBX,GAAOC,SAAWO,EAGxB,IAAMmB,EAAe9C,KAAKH,MAAMiC,MAAMY,QAAO,SAAAT,GAAI,OAAsB,IAAlBA,EAAKb,YACpD2B,EAAiB/C,KAAKH,MAAMiC,MAAMY,QAAO,SAAAT,GAAI,OAAsB,IAAlBA,EAAKb,YAE5DpB,KAAKC,SAAS,CAAC6B,MAAM,GAAD,mBAAMgB,GAAN,YAAuBC,Q,0CAK3C,IAAIjB,EAAQkB,aAAaC,QAAQ,SAC7BnB,GACF9B,KAAKC,SAAS,CAAC6B,MAAOoB,KAAKC,MAAMrB,O,2CAMnCkB,aAAaI,QAAQ,QAASF,KAAKG,UAAUrD,KAAKH,MAAMiC,U,+BAKxD,IAAMwB,EAAetD,KAAKH,MAAMiC,MAAMK,OAAS,EAAI,4BAAQrB,UAAU,8BAA8BU,QAASxB,KAAKyC,kBAA9D,cAAsG,KAEzJ,OACA,yBAAK3B,UAAU,QACb,0CACA,6BACE,kBAAC,EAAD,CAAWR,UAAWN,KAAKuC,iBAE7B,6BACE,kBAAC,EAAD,CAAWT,MAAO9B,KAAKH,MAAMiC,MAAOF,aAAc5B,KAAKwC,uBAAwBX,aAAc7B,KAAK0B,mBAEnG4B,O,GA9EWvC,aCClBwC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.f23fe5ec.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass TaskInput extends Component{\n\n    constructor(props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.state = {value: \"\"}\n    }\n\n    handleChange(e) {\n        // Handle input change\n        this.setState({value: e.target.value})\n    }\n\n\n    handleSubmit(e) {\n        // Handle form submit\n        e.preventDefault()\n        if(this.state.value.trim() === \"\"){\n            alert(\"Please enter a task!\")\n        }\n        else{\n            this.props.onNewTask(this.state.value)\n            this.setState({value: \"\"})\n        }\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label htmlFor=\"task\">Add a Task</label>\n                <input\n                    name=\"task\" \n                    id=\"task\" \n                    type=\"text\" \n                    placeholder=\"Your task...\" \n                    value={this.state.value}\n                    onChange={this.handleChange}>\n                </input>\n                <input className=\"accent-button\" type=\"submit\" value=\"Add Task\"></input>\n            </form>\n\n        ) \n    }\n}\n\nexport default TaskInput","import React, { Component } from 'react';\n\nclass TaskRow extends Component {\n    constructor(props){\n        super(props)\n        this.handleClick = this.handleClick.bind(this)\n        this.handleClear = this.handleClear.bind(this)\n    }\n\n    handleClick(e){\n        this.props.onChange(this.props.index, !this.props.complete)\n    }\n\n    handleClear(){\n        this.props.onClear(this.props.index)\n    }\n\n    render(){\n        console.log(\"Task row rendered.\")\n        return (\n            <tr>\n                <td>{this.props.name}</td>\n                <td className=\"td-right\">\n                    <button className= {this.props.complete === true ? \"accent-button\" : \"muted-button success-button\"} onClick={this.handleClick}>&#10003;</button>\n                </td>\n                <td className=\"td-right\">\n                    <button className=\"warning-button muted-button\" onClick={this.handleClear}>&#10005;</button>\n                </td>\n            </tr>\n        )\n    }\n\n}\n\nexport default TaskRow","import React, { Component } from \"react\";\nimport TaskRow from './TaskRow'\n\nclass TaskTable extends Component {\n\n    constructor(props){\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleClearTask = this.handleClearTask.bind(this)\n    }\n\n    handleChange(index, status){\n        this.props.onTaskChange(index, status)\n    }\n\n    handleClearTask(index){\n        this.props.onTaskRemove(index)\n    }\n\n    createTaskTable(tasks) {\n        const taskRows = tasks.map((task, index)=>\n            <TaskRow key={index} index={index} name={task.name} complete={task.complete} onChange={this.handleChange} onClear={this.handleClearTask}/>\n        )\n\n        return (\n\n            <table>\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th></th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {taskRows}\n                </tbody>\n            </table>\n        )\n    }\n\n    render() {\n        console.log(\"Table: \", this.props.tasks)\n\n        let table\n        if (this.props.tasks.length !== 0) {\n            table = this.createTaskTable(this.props.tasks)\n        }\n        else {\n            table = (\n                <table>\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>No tasks yet.</td>\n                            <td></td>\n                            <td></td>\n                        </tr>\n                    </tbody>\n                </table>\n\n            )\n        }\n\n        return (\n            table\n        )\n    }\n}\n\nexport default TaskTable","import React, { Component } from 'react';\nimport TaskInput from './TaskInput'\nimport TaskTable from './TaskTable'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.handleNewTask = this.handleNewTask.bind(this)\n    this.handleTaskStatusChange = this.handleTaskStatusChange.bind(this)\n    this.handleClearTask = this.handleClearTask.bind(this)\n    this.handleClearTasks = this.handleClearTasks.bind(this)\n    this.state = {tasks: []}\n  }\n\n  //Example Tasks\n  sample_tasks = {\n    tasks: [\n      {\n        name: \"Example Task 1\",\n        complete: false,\n      },\n      {\n        name: \"Example Task 2\",\n        complete: true,\n      },\n    ]\n  }\n\n  handleNewTask(task){\n    this.setState({tasks: [{name: task, complete: false} ,...this.state.tasks]})\n  }\n\n  handleClearTask(index){\n    const tasks = this.state.tasks.filter((task, i) => i !== index)\n    this.setState({tasks: tasks})\n  }\n\n  handleClearTasks(){\n    if(window.confirm(\"Are you sure you want to remove all tasks?\")){\n      this.setState({tasks: []})\n    }\n  }\n\n  handleTaskStatusChange(index, status) {\n\n    //Update individual task\n    let tasks = this.state.tasks\n    tasks[index].complete = status\n\n    //Then sort tasks\n    const currentTasks = this.state.tasks.filter(task => task.complete === false )\n    const completedTasks = this.state.tasks.filter(task => task.complete === true)\n\n    this.setState({tasks: [...currentTasks, ...completedTasks]})\n  }\n\n  componentDidMount(){\n    // Fetch tasks from local storage\n    let tasks = localStorage.getItem(\"tasks\")\n    if (tasks){\n      this.setState({tasks: JSON.parse(tasks)})\n    }\n  }\n\n  componentDidUpdate(){\n    // When component updates, save tasks in local storage\n    localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks))\n  }\n\n  render() {\n\n    const removeButton = this.state.tasks.length > 1 ? <button className=\"muted-button warning-button\" onClick={this.handleClearTasks}>Remove All</button> : null\n\n    return (\n    <div className=\"todo\">\n      <h1>To Do List</h1>\n      <div> \n        <TaskInput onNewTask={this.handleNewTask}/>\n      </div>\n      <div>\n        <TaskTable tasks={this.state.tasks} onTaskChange={this.handleTaskStatusChange} onTaskRemove={this.handleClearTask}/>\n      </div>\n      {removeButton}\n    </div>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'))\n"],"sourceRoot":""}